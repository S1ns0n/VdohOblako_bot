import asyncio

from aiogram import Bot
from aiogram import F, types
from aiogram import Router

from .disk_manager_router import session_manager
from logger import main_logger
media_downloader = Router()
media_groups = {}


@media_downloader.message(F.photo & ~F.media_group_id)
async def download_single_photo(message: types.Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Ñ–æ—Ç–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user_session = await session_manager.get_user_session(message.from_user.id)
        photo = message.photo[-1]
        photo_io = await bot.download(photo.file_id)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        file_info = await bot.get_file(photo.file_id)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–≤–æ–µ
        if hasattr(file_info, 'file_path') and file_info.file_path:
            original_filename = file_info.file_path.split('/')[-1]
            # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            if original_filename.startswith('photos/'):
                original_filename = original_filename.replace('photos/', '')
            filename = original_filename
        else:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Å timestamp
            filename = f"photo_{message.message_id}_{int(message.date.timestamp())}.jpg"

        success = await user_session.upload_file(file_obj=photo_io, filename=filename)

        if success:
            await message.answer("‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ")

    except Exception as e:
        await main_logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–∏–Ω–æ—á–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")


@media_downloader.message(F.photo & F.media_group_id)
async def handle_media_group(message: types.Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø (–∞–ª—å–±–æ–º–æ–≤) —Å —É—á–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    media_group_id = message.media_group_id
    user_id = message.from_user.id

    # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –º–µ–¥–∏–∞ –≤ –≥—Ä—É–ø–ø–µ
    if media_group_id not in media_groups:
        media_groups[media_group_id] = {
            'user_id': user_id,  # –î–æ–±–∞–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            'messages': [],
            'processed': False,
            'chat_id': message.chat.id
        }

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ–π –≥—Ä—É–ø–ø—ã
        asyncio.create_task(process_media_group(
            media_group_id=media_group_id,
            bot=bot,
            message_id=message.message_id
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
    media_groups[media_group_id]['messages'].append(message)


async def process_media_group(media_group_id: str, bot: Bot, message_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏"""
    # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ–±—ã –≤—Å–µ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã —É—Å–ø–µ–ª–∏ –ø—Ä–∏–π—Ç–∏
    await asyncio.sleep(2)

    if media_group_id not in media_groups:
        return

    group_data = media_groups[media_group_id]

    # –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞ - –≤—ã—Ö–æ–¥–∏–º
    if group_data['processed'] or not group_data['messages']:
        return

    group_data['processed'] = True
    messages = group_data['messages']
    chat_id = group_data['chat_id']
    user_id = group_data['user_id']  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_session = await session_manager.get_user_session(user_id)
        downloaded_files = []

        # –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ –º–µ–¥–∏–∞ –∏–∑ –≥—Ä—É–ø–ø—ã
        for msg in messages:
            if msg.photo:
                photo = msg.photo[-1]
                photo_io = await bot.download(photo.file_id)

                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å timestamp
                import time
                filename = f"{int(time.time())}_{photo.file_id}.jpg"

                success = await user_session.upload_file(file_obj=photo_io, filename=filename)

                if success:
                    downloaded_files.append(filename)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            chat_id=chat_id,
            text=f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –§–∞–π–ª–æ–≤: {len(downloaded_files)}\n"
                 f"üìÅ –ü–∞–ø–∫–∞: {user_session.current_path}",
            reply_to_message_id=message_id
        )

    except Exception as e:
        await main_logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {e}")
        await bot.send_message(chat_id, text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã.–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

    finally:
        # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        if media_group_id in media_groups:
            del media_groups[media_group_id]


@media_downloader.message(F.document)
async def download_document(message: types.Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        user_session = await session_manager.get_user_session(message.from_user.id)

        document = message.document
        file_io = await bot.download(document.file_id)

        success = await user_session.upload_file(
            file_obj=file_io,
            filename=document.file_name or document.file_id
        )

        if success:
            await message.answer("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!")
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")

    except Exception as e:
        await main_logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
